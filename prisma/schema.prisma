generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Quiz {
  id          String        @id @default(uuid())
  title       String
  createdAt   DateTime      @default(now())

  // Relations
  questions   Question[]
  submissions Submission[]   // ðŸ‘ˆ back-reference from Submission
}

model Question {
  id        String           @id @default(uuid())
  quiz      Quiz             @relation(fields: [quizId], references: [id], onDelete: Cascade)
  quizId    String
  text      String
  type      QuestionType
  createdAt DateTime         @default(now())

  // Relations
  options           Option[]
  submittedAnswers  SubmittedAnswer[]   // ðŸ‘ˆ back-reference from SubmittedAnswer
}

model Option {
  id         String    @id @default(uuid())
  question   Question  @relation(fields: [questionId], references: [id])
  questionId String
  text       String
  isCorrect  Boolean   @default(false)
}

model Submission {
  id        String    @id @default(uuid())
  quiz      Quiz      @relation(fields: [quizId], references: [id])
  quizId    String
  score     Int
  total     Int
  createdAt DateTime  @default(now())

  // Relations
  answers   SubmittedAnswer[]
}

model SubmittedAnswer {
  id              String     @id @default(uuid())
  submission      Submission @relation(fields: [submissionId], references: [id])
  submissionId    String
  question        Question   @relation(fields: [questionId], references: [id])
  questionId      String
  selectedOptionIds Json?
  textAnswer      String?
}

enum QuestionType {
  SINGLE_CHOICE
  MULTIPLE_CHOICE
  TEXT
}
